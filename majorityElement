/*
Majority Element
Given an array nums of size n, return the majority element.
The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.

Example 1:
Input: nums = [3,2,3]
Output: 3
Example 2:
Input: nums = [2,2,1,1,1,2,2]
Output: 2
*/


package main

import (
	"fmt"
)

func majorityElement(nums []int) int {
	count := 0
	cantidate := 0

	for _, num := range nums {
		if count == 0 {
			cantidate = num
			println("value of the cantidate", cantidate)
		}
		if num == cantidate {
			count++
			fmt.Println("print the count", count)
		} else {
			count--
		}
	}
	return cantidate
}

func main() {
	nums := []int{2, 2, 1, 1, 1, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6}
	fmt.Println(majorityElement(nums))
}
